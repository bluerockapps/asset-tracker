// tslint:disable
/*
 * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use this file except in compliance with
 * the License. A copy of the License is located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
 * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */
// tslint:enable
import { Component, Input, Inject } from '@angular/core';
import { AmplifyService } from '../../../providers/amplify.service';
import { auth } from '../../../assets/data-test-attributes';
var template = "\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\" data-test=\"" + auth.forgotPassword.section + "\">\n    <div class=\"amplify-form-body\" data-test=\"" + auth.forgotPassword.bodySection + "\">\n    <div class=\"amplify-form-header\" data-test=\"" + auth.forgotPassword.headerSection + "\">\n      {{ this.amplifyService.i18n().get('Reset your password') }}\n    </div>\n    <div class=\"amplify-form-text\" *ngIf=\"!code_sent\">\n      {{ this.amplifyService.i18n().get('You will receive a verification code') }}\n    </div>\n    <div class=\"amplify-form-text\" *ngIf=\"code_sent\">\n      {{ this.amplifyService.i18n().get('Enter the code you received and set a new password') }}\n    </div>\n    <div class=\"amplify-form-row\" *ngIf=\"!code_sent\">\n      <label class=\"amplify-input-label\" for=\"usernameinput\">\n        {{ this.amplifyService.i18n().get('Username *') }}\n      </label>\n      <input #usernameinput\n        (keyup)=\"setUsername($event.target.value)\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Username') }}\"\n        [value]=\"username\"\n        data-test=\"" + auth.forgotPassword.usernameInput + "\"\n      />\n      </div>\n      <div class=\"amplify-form-row\" *ngIf=\"code_sent\">\n      <label class=\"amplify-input-label\" for=\"code\">\n        {{ this.amplifyService.i18n().get('Confirmation Code *') }}\n      </label>\n      <input #code\n        (keyup)=\"setCode(code.value)\"\n        class=\"amplify-form-input\"\n        type=\"text\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Enter code') }}\"\n        data-test=\"" + auth.forgotPassword.codeInput + "\"\n      />\n      </div>\n      <div class=\"amplify-form-row\" *ngIf=\"code_sent\">\n      <label class=\"amplify-input-label\" for=\"password\">\n        {{ this.amplifyService.i18n().get('New Password *') }}\n      </label>\n      <input #password\n        (keyup)=\"setPassword(password.value)\"\n        (keyup.enter)=\"onSubmit()\"\n        class=\"amplify-form-input\"\n        type=\"password\"\n        placeholder=\"{{ this.amplifyService.i18n().get('Password') }}\"\n        data-test=\"" + auth.forgotPassword.newPasswordInput + "\"\n      />\n      </div>\n      <div class=\"amplify-form-actions\">\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            *ngIf=\"!code_sent\"\n            (click)=\"onSend()\"\n            data-test=\"" + auth.forgotPassword.sendCodeButton + "\"\n            >\n              {{ this.amplifyService.i18n().get('Submit') }}</button>\n          <button class=\"amplify-form-button\"\n            *ngIf=\"code_sent\"\n            (click)=\"onSubmit()\"\n            data-test=\"" + auth.forgotPassword.submitButton + "\"\n            >\n              {{ this.amplifyService.i18n().get('Verify') }}</button>\n        </div>\n        <div class=\"amplify-form-cell-left\">\n          <div class=\"amplify-form-actions-left\">\n            <a\n              *ngIf=\"code_sent\"\n              class=\"amplify-form-link\"\n              (click)=\"onSend()\"\n              data-test=\"" + auth.forgotPassword.resendCodeLink + "\"\n              >\n              {{ this.amplifyService.i18n().get('Resend Code') }}\n            </a>\n            <a\n              *ngIf=\"!code_sent\"\n              class=\"amplify-form-link\"\n              (click)=\"onSignIn()\"\n              data-test=\"" + auth.forgotPassword.backToSignInLink + "\"\n              >\n              {{ this.amplifyService.i18n().get('Back to Sign in') }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div class=\"amplify-alert-message\">{{ this.amplifyService.i18n().get(errorMessage) }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n</div>\n";
var ForgotPasswordComponentCore = /** @class */ (function () {
    function ForgotPasswordComponentCore(amplifyService) {
        this.amplifyService = amplifyService;
        this.code_sent = false;
        this.hide = [];
        this.logger = this.amplifyService.logger('ForgotPasswordComponent');
    }
    Object.defineProperty(ForgotPasswordComponentCore.prototype, "data", {
        set: function (data) {
            this._authState = data.authState;
            this._show = data.authState.state === 'forgotPassword';
            this.hide = data.hide ? data.hide : this.hide;
            this.username = (data.authState.user &&
                data.authState.user.username) ?
                data.authState.user.username : '';
        },
        enumerable: true,
        configurable: true
    });
    ForgotPasswordComponentCore.prototype.shouldHide = function (comp) {
        return this.hide.filter(function (item) { return item === comp; })
            .length > 0;
    };
    Object.defineProperty(ForgotPasswordComponentCore.prototype, "authState", {
        set: function (authState) {
            this._authState = authState;
            this._show = authState.state === 'forgotPassword';
            this.username = (authState.user && authState.user.username) ? authState.user.username : '';
        },
        enumerable: true,
        configurable: true
    });
    ForgotPasswordComponentCore.prototype.ngOnInit = function () {
        if (!this.amplifyService.auth()) {
            throw new Error('Auth module not registered on AmplifyService provider');
        }
    };
    ForgotPasswordComponentCore.prototype.setUsername = function (username) {
        this.username = username;
    };
    ForgotPasswordComponentCore.prototype.setCode = function (code) {
        this.code = code;
    };
    ForgotPasswordComponentCore.prototype.setPassword = function (password) {
        this.password = password;
    };
    ForgotPasswordComponentCore.prototype.onSend = function () {
        var _this = this;
        if (!this.username) {
            this.errorMessage = "Username cannot be empty";
            return;
        }
        this.amplifyService.auth().forgotPassword(this.username)
            .then(function () {
            _this.code_sent = true;
        })
            .catch(function (err) {
            _this._setError(err);
            _this.code_sent = false;
        });
    };
    ForgotPasswordComponentCore.prototype.onSubmit = function () {
        var _this = this;
        this.amplifyService.auth()
            .forgotPasswordSubmit(this.username, this.code, this.password)
            .then(function () {
            var user = { username: _this.username };
            _this.onAlertClose();
            _this.amplifyService.setAuthState({ state: 'signIn', user: user });
        })
            .catch(function (err) { return _this._setError(err); });
    };
    ForgotPasswordComponentCore.prototype.onSignIn = function () {
        this.onAlertClose();
        this.amplifyService.setAuthState({ state: 'signIn', user: null });
    };
    ForgotPasswordComponentCore.prototype.onAlertClose = function () {
        this._setError(null);
    };
    ForgotPasswordComponentCore.prototype._setError = function (err) {
        if (!err) {
            this.errorMessage = null;
            return;
        }
        this.errorMessage = err.message || err;
    };
    ForgotPasswordComponentCore.decorators = [
        { type: Component, args: [{
                    selector: 'amplify-auth-forgot-password-core',
                    template: template
                },] },
    ];
    /** @nocollapse */
    ForgotPasswordComponentCore.ctorParameters = function () { return [
        { type: AmplifyService, decorators: [{ type: Inject, args: [AmplifyService,] },] },
    ]; };
    ForgotPasswordComponentCore.propDecorators = {
        "data": [{ type: Input },],
        "hide": [{ type: Input },],
        "authState": [{ type: Input },],
    };
    return ForgotPasswordComponentCore;
}());
export { ForgotPasswordComponentCore };
//# sourceMappingURL=forgot-password.component.core.js.map