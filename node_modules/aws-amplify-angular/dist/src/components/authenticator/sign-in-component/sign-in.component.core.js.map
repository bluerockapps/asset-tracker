{"version":3,"file":"sign-in.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/sign-in-component/sign-in.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, OnInit, Inject } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { AuthState } from '../../../providers/auth.state';\nimport { includes } from '../common';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-container\" *ngIf=\"_show\">\n  <div class=\"amplify-form-container\" data-test=\"${auth.signIn.section}\">\n    <div class=\"amplify-form-body\" data-test=\"${auth.signIn.bodySection}\">\n      <div class=\"amplify-form-header\" data-test=\"${auth.signIn.headerSection}\">\n        {{ this.amplifyService.i18n().get('Sign in to your account') }}\n      </div>\n      <div class=\"amplify-amplify-form-row amplify-signin-username\">\n        <label class=\"amplify-input-label\" for=\"amplifyUsername\">\n          {{ this.amplifyService.i18n().get('Username *') }}\n        </label>\n        <input\n          #amplifyUsername\n          (keyup)=\"setUsername($event.target.value)\"\n          class=\"amplify-form-input\"\n          type=\"text\"\n          required\n          placeholder=\"{{ this.amplifyService.i18n().get('Username') }}\"\n          [value]=\"username\"\n          data-test=\"${auth.signIn.usernameInput}\"\n        />\n      </div>\n      <div class=\"amplify-form-row amplify-signin-password\">\n        <label class=\"amplify-input-label\" for=\"password\">\n          {{ this.amplifyService.i18n().get('Password *') }}\n        </label>\n        <input #password\n          (keyup)=\"setPassword(password.value)\"\n          (keyup.enter)=\"onSignIn()\"\n          class=\"amplify-form-input\"\n          type=\"password\"\n          required\n          placeholder=\"{{ this.amplifyService.i18n().get('Enter your password') }}\"\n          data-test=\"${auth.signIn.passwordInput}\"\n        />\n        <span class=\"amplify-form-action\" *ngIf=\"!shouldHide('ForgotPassword')\">{{ this.amplifyService.i18n().get('Forgot Password?') }}\n        <a class=\"amplify-form-link\"\n            (click)=\"onForgotPassword()\"\n            data-test=\"${auth.signIn.forgotPasswordLink}\"\n          >{{ this.amplifyService.i18n().get('Reset your password') }}</a></span>\n      </div>\n      <div class=\"amplify-form-actions\">\n        <div class=\"amplify-form-cell-right\">\n          <button class=\"amplify-form-button\"\n            (click)=\"onSignIn()\"\n            data-test=\"${auth.signIn.signInButton}\"\n          >{{ this.amplifyService.i18n().get('Sign In') }}</button>\n        </div>\n        <div class=\"amplify-form-cell-left\" *ngIf=\"!shouldHide('SignUp')\">\n          <div class=\"amplify-form-signup\">\n            {{ this.amplifyService.i18n().get('No account?') }}\n            <a\n              class=\"amplify-form-link\"\n              (click)=\"onSignUp()\"\n              data-test=\"${auth.signIn.createAccountLink}\"\n              >\n              {{ this.amplifyService.i18n().get('Create account') }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"amplify-alert\" *ngIf=\"errorMessage\">\n    <div class=\"amplify-alert-body\">\n      <span class=\"amplify-alert-icon\">&#9888;</span>\n      <div\n        class=\"amplify-alert-message\"\n        data-test=\"${auth.signIn.signInError}\"\n        >\n          {{ this.amplifyService.i18n().get(errorMessage) }}</div>\n      <a class=\"amplify-alert-close\" (click)=\"onAlertClose()\">&times;</a>\n    </div>\n  </div>\n</div>\n`;\n\n@Component({\n  selector: 'amplify-auth-sign-in-core',\n  template\n})\nexport class SignInComponentCore implements OnInit {\n  _authState: AuthState;\n  _show: boolean;\n  username: string;\n  password: string;\n  errorMessage: string;\n  protected logger: any;\n\n  constructor(@Inject(AmplifyService) protected amplifyService: AmplifyService) {\n    this.logger = this.amplifyService.logger('SignInComponent');\n  }\n\n  @Input()\n  set data(data: any) {\n    this.hide = data.hide ? data.hide : this.hide;\n  }\n\n  @Input() hide: string[] = [];\n\n  @Input()\n  set authState(authState: AuthState) {\n    this._authState = authState;\n    this._show = includes(['signIn', 'signedOut', 'signedUp'], authState.state);\n    this.username = authState.user? authState.user.username || '' : '';\n  }\n\n  ngOnInit() {\n    if (!this.amplifyService.auth()){\n      throw new Error('Auth module not registered on AmplifyService provider');\n    }\n  }\n\n  shouldHide(comp) {\n    return this.hide.filter(item => item === comp)\n      .length > 0;\n  }\n\n  setUsername(username: string) {\n    this.username = username;\n  }\n\n  setPassword(password: string) {\n    this.password = password;\n  }\n\n  onSignIn() {\n    this.amplifyService.auth().signIn(this.username, this.password)\n      .then(user => {\n        if (user['challengeName'] === 'SMS_MFA' || user['challengeName'] === 'SOFTWARE_TOKEN_MFA') {\n          this.amplifyService.setAuthState({ state: 'confirmSignIn', user });\n        } else if (user['challengeName'] === 'NEW_PASSWORD_REQUIRED') {\n          this.amplifyService.setAuthState({ state: 'requireNewPassword', user });\n        } else {\n          this.amplifyService.setAuthState({ state: 'signedIn', user });\n        }\n      })\n      .catch((err) => {\n        this._setError(err);\n      });\n  }\n\n  onAlertClose() {\n    this._setError(null);\n  }\n\n  onForgotPassword() {\n    this.onAlertClose();\n    const user = this.username ? { username: this.username } : null;\n    this.amplifyService.setAuthState({ state: 'forgotPassword', user });\n  }\n\n  onSignUp() {\n    this.onAlertClose();\n    const user = this.username? { username: this.username } : null;\n    this.amplifyService.setAuthState({ state: 'signUp', user });\n  }\n\n  _setError(err) {\n    if (!err) {\n      this.errorMessage = null;\n      return;\n    }\n    this.errorMessage = err.message || err;\n    this.logger.error(this.errorMessage);\n  }\n}\n"]}